/*doc
---
title    : background-image()
parent   : _04_css3
name     : background-image
category : index
---

| options        | IE    | Chrome | Firefox | Safari | Opera  | iOS   | Android | Can I use                                                                     |
| :------------- | :---: | :----: | :-----: | :----: | :----: | :---: | :-----: | :---------------------------------------------------------------------------- |
| 複数の背景     | `9`   | `OK`   | `3.6`   | `1.3`  | `OK`   | `OK`  | `OK`    | [CSS3 Background-image options](http://caniuse.com/#feat=background-img-opts) |
| グラデーション | `10`  | `OK`   | `4`     | `4`    | `12.1` | `4.3` | `4`     | [CSS Gradients](http://caniuse.com/#feat=css-gradients)                       |

| 引数      | 初期値 | 値       | 備考                           |
| :-------- | :----- | :------- | :----------------------------- |
| `$images` | なし   | `<List>` | **β版**                       |

* `background-image` に複数の背景を適用して返す。
* `linear-gradient` `radial-gradient` の複数指定を想定（`gradient` 以外でこの `@mixin` を使用する利点がない）。
* 複数指定を想定しているため、フォールバックとして `background-color` は返さない。
* **注意点（β版故の）**
    * ～ `iOS 4.2` &amp; ～ `Android 3.0` に対応させたい場合は `-webkit-gradient()` を別途併記する。
    * 絶賛検証中。

```scss:@function
@mixin background-image($images...) {
  ...
}
```

```scss:scss（使用例）
.class-name {
  @include background-image(
    url('/images/logo.png'),
    linear-gradient(to bottom, #ffffff 90%, #faf8f5 100%),
    linear-gradient(160deg, #999ca8 0, #999ca8 60%, #6b6f7d 62%, #6b6f7d 100%)
  );
}
```

```scss:css（コンパイル結果）
.class-name {
  background-image:
    url('/images/logo.png'),
    -webkit-linear-gradient(top, #ffffff 90%, #faf8f5 100%),
    -webkit-linear-gradient(-430deg, #999ca8 0, #999ca8 60%, #6b6f7d 62%, #6b6f7d 100%);
  background-image:
    url('/images/logo.png'),
    linear-gradient(to bottom, #ffffff 90%, #faf8f5 100%),
    linear-gradient(160deg, #999ca8 0, #999ca8 60%, #6b6f7d 62%, #6b6f7d 100%);
}
```

*/
// ==================================================
/// @require {variable} $g-prefix-for-webkit
/// @require {variable} $g-prefix-for-mozilla
/// @require {variable} $g-prefix-for-microsoft
/// @require {variable} $g-prefix-for-opera
/// @require {variable} $g-prefix-for-spec

@mixin background-image($images...) {
  $webkit-images: ();
  $spec-images: ();

  @each $image in $images {
    $webkit-image: ();
    $spec-image: ();

    @if (type-of($image) == string) {
      $url-str:       str-slice($image, 1, 3);
      $gradient-type: str-slice($image, 1, 6);

      @if $url-str == "url" {
        $webkit-image: $image;
        $spec-image:   $image;
      }

      @else if $gradient-type == "linear" {
        $gradients: _linear-gradient-parser($image);
        $webkit-image:  map-get($gradients, webkit-image);
        $spec-image:    map-get($gradients, spec-image);
      }

      @else if $gradient-type == "radial" {
        $gradients: _radial-gradient-parser($image);
        $webkit-image: map-get($gradients, webkit-image);
        $spec-image:   map-get($gradients, spec-image);
      }
    }

    $webkit-images: append($webkit-images, $webkit-image, comma);
    $spec-images:   append($spec-images,   $spec-image,   comma);
  }

  @if $g-prefix-for-webkit {
    background-image: $webkit-images;
  }
  @if $g-prefix-for-spec {
    background-image: $spec-images;
  }
}
