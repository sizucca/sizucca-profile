/*doc
---
title    : radial-gradient()
parent   : _04_css3
name     : radial-gradient
category : index
---

| IE    | Chrome | Firefox | Safari | Opera  | iOS   | Android | Can I use                                               |
| :---: | :----: | :-----: | :----: | :----: | :---: | :-----: | :------------------------------------------------------ |
| `10`  | `OK`   | `4`     | `4`    | `12.1` | `4.3` | `4`     | [CSS Gradients](http://caniuse.com/#feat=css-gradients) |

| 引数     | 初期値 | 値                          | 備考                           |
| :------- | :----- | :-------------------------- | :----------------------------- |
| （省略） | なし   | `radial-gradient` の引数値  | **β版（というかテスト版）**   |

* `background-image` の `radial-gradient` を返す。
* 未対応ブラウザのフォールバックとして `background-color` も返す。
* フォールバックの `background-color` は開始色が使用される。
* フォールバックの `background-color` を指定したい場合は、最終引数に `$fallback:` で指定する。
* **注意点（β版故の）**
    * ～ `iOS 4.2` &amp; ～ `Android 3.0` に対応させたい場合は `-webkit-gradient()` を別途併記する。
    * 指定可能な色数は最大 `10` 個（もしそれ以上必要なら改修するが、これ以上多くなることは無いと想定）。
    * 絶賛検証中。

```scss:@function
@mixin radial-gradient() {
  ...
}
```

```scss:scss（使用例）
.class-name {
  @include radial-gradient(to bottom, #ffffff, #faf8f5);
}
```

```css:css（コンパイル結果）
.class-name {
  background-color: #ffffff;
  background-image: -webkit-radial-gradient(#ffffff, #faf8f5);
  background-image: radial-gradient(  #ffffff, #faf8f5);
}
```

*/
// ==================================================
/// @require {variable} $g-prefix-for-webkit
/// @require {variable} $g-prefix-for-mozilla
/// @require {variable} $g-prefix-for-microsoft
/// @require {variable} $g-prefix-for-opera
/// @require {variable} $g-prefix-for-spec

@mixin radial-gradient($g1, $g2,
                       $g3: null, $g4: null,
                       $g5: null, $g6: null,
                       $g7: null, $g8: null,
                       $g9: null, $g10: null,
                       $pos: null,
                       $shape-size: null,
                       $fallback: null) {

  $data: _radial-arg-parser($g1, $g2, $pos, $shape-size);
  $g1:  nth($data, 1);
  $g2:  nth($data, 2);
  $pos: nth($data, 3);
  $shape-size: nth($data, 4);

  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;

  // Strip deprecated cover/contain for spec
  $shape-size-spec: _shape-size-stripper($shape-size);

  // Set $g1 as the default fallback color
  $first-color: nth($full, 1);
  $fallback-color: nth($first-color, 1);

  @if (type-of($fallback) == color) or ($fallback == "transparent") {
    $fallback-color: $fallback;
  }

  // Add Commas and spaces
  $shape-size: if($shape-size, "#{$shape-size}, ", null);
  $pos:        if($pos, "#{$pos}, ", null);
  $pos-spec:   if($pos, "at #{$pos}", null);
  $shape-size-spec: if(($shape-size-spec != " ") and ($pos == null), "#{$shape-size-spec}, ", "#{$shape-size-spec} ");

  background-color:  $fallback-color;
  @if $g-prefix-for-webkit {
    background-image: -webkit-radial-gradient(unquote(#{$pos}#{$shape-size}#{$full}));
  }
  @if $g-prefix-for-spec {
    background-image: unquote("radial-gradient(#{$shape-size-spec}#{$pos-spec}#{$full})");
  }
}
